{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_directives/alert.component.html","webpack:///./src/app/_directives/alert.component.ts","webpack:///./src/app/_directives/index.ts","webpack:///./src/app/_services/alert.service.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/users-list/users-list.component.css","webpack:///./src/app/users-list/users-list.component.html","webpack:///./src/app/users-list/users-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div *ngIf=\\\"message\\\" [ngClass]=\\\"{ 'alert': message, 'alert-success': message.type === 'success', 'alert-danger': message.type === 'error' }\\\">{{message.text}}</div>\"","﻿import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AlertService } from '../_services';\n\n@Component({\n    selector: 'alert',\n    templateUrl: 'alert.component.html'\n})\n\nexport class AlertComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    message: any;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.subscription = this.alertService.getMessage().subscribe(message => { \n            this.message = message; \n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}","﻿export * from './alert.component';","﻿import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterNavigationChange = false;\n\n    constructor(private router: Router) {\n        // clear alert message on route change\n        router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterNavigationChange) {\n                    // only keep for a single location change\n                    this.keepAfterNavigationChange = false;\n                } else {\n                    // clear alert\n                    this.subject.next();\n                }\n            }\n        });\n    }\n\n    success(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    getMessage(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}","﻿export * from './alert.service';\nexport * from './user.service';","﻿import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from '../../environments/environment';\nimport { User } from '../_models';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    getAll(): Observable<User[]>{\n        return this.http.get<User[]>(`${environment.apiUrl}/all_users`);\n    }\n\n    getById(id: number): Observable<User> {\n        return this.http.get<User>(`${environment.apiUrl}/user/` + id);\n    }\n\n    getAuthenticatedUser(): Observable<User> {\n        return this.http.get<User>(`${environment.apiUrl}/auth`);\n    }\n\n    update(user: User) {\n        return this.http.put(`${environment.apiUrl}/users/` + user.id, user);\n    }\n\n    delete(id: number) {\n        return this.http.delete(`${environment.apiUrl}/users/` + id);\n    }\n}","module.exports = \".main-container {\\n    text-align: center;\\n    margin: auto;\\n    width: 60%;\\n    padding-top: 10%;\\n}\"","module.exports = \"<div class=\\\"main-container\\\">\\n  <alert></alert>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'first-angular-project';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, OnInit } from '@angular/core';\nimport { ReactiveFormsModule }    from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http'\nimport { AppComponent } from './app.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { AlertComponent } from './_directives';\nimport { AlertService, UserService } from './_services';\n\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersListComponent,\n    ProfileComponent,\n    AlertComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserModule,\n    RouterModule.forRoot([\n      { path: 'users-list', component: UsersListComponent },\n      { path: 'profile/:id', component: ProfileComponent },\n      { path: '', pathMatch: 'full' ,redirectTo:'users-list'},\n    ]),\n  ],\n  providers: [\n    AlertService,\n    UserService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"profile-container\\\">\\n  <h1>{{user?.name}} Profile</h1>\\n  <br/>\\n  <span>id : </span><span>{{user?.id}}</span>\\n  <br/>\\n  <span>First Name : </span><span>{{user?.name.substring(0, user.name.indexOf(' '))}}</span>\\n  <br/>\\n  <span>Last Name : </span><span>{{user?.name.substring(user.name.indexOf(' ') + 1, user.name.length)}}</span>\\n  <br/>\\n  <span>Phone Number : </span><span>{{user?.phoneNumber}}</span>\\n  <br/>\\n  <span>Email : </span><span>{{user?.email}}</span>\\n  <br/>\\n  <span>Created at : </span><span>{{user?.created_at}}</span>\\n  <br/>\\n</div>\\n<br />\\n<button routerLink=\\\"\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Back to users list</button>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../_services';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  private currentUserId : number;\n  public user;\n\n  constructor(private _Activatedroute:ActivatedRoute, private _userService: UserService) {\n  }\n\n  ngOnInit() {\n    this.currentUserId = parseInt(this._Activatedroute.snapshot.paramMap.get(\"id\"));\n    this._userService.getById(this.currentUserId).subscribe((data=> {\n      this.user = data;\n      console.log(data);\n    }))\n  }\n\n}\n","module.exports = \"\\ntable {\\n    font-family: arial, sans-serif;\\n    border-collapse: collapse;\\n    width: 100%;\\n    text-align: left;\\n}\\n\\n.user-button:hover {\\n    -webkit-transform:scale(1.03);\\n            transform:scale(1.03);\\n}\\n\\n.user-button {\\n    border: 1px solid #dddddd;\\n    padding: 20px;\\n    font-size: 120%;\\n    height: 50px;\\n    transition: all 0.3s;\\n}\\n\\ntd, th {\\n    padding-right: 20px;\\n    padding-left: 40px;\\n}\\n\\n.user-button:nth-child(even) {\\n    background-color: #dddddd;\\n}\\n\\n.online-dot {\\n    color: green;\\n    font-size: 30pt;\\n}\\n\\n.offline-dot {\\n    color: red;\\n    font-size: 30pt;\\n}\"","module.exports = \"<div>\\n  <h2>Users List</h2>\\n  <br/>\\n  <br/>\\n  <table>\\n    <tr>\\n      <th>Email</th>\\n      <th>Name</th>\\n      <th>Status</th>\\n    </tr>\\n    <tr class=\\\"user-button\\\" *ngFor=\\\"let user of users\\\" [routerLink]=\\\"['/profile/', user.id]\\\">\\n      <td>{{user.email}}</td>\\n      <td>{{user.name.substring(0, user.name.indexOf(' ')) + \\\" \\\" + user.name.substring(user.name.indexOf(' ') + 1, user.name.length)}}</td>\\n      <td><span>{{user.status}} </span><span class=\\\"online-dot\\\" *ngIf=\\\"user.status == 'online'\\\"> •</span><span class=\\\"offline-dot\\\" *ngIf=\\\"user.status == 'offline'\\\"> •</span></td>\\n    </tr>\\n  </table>\\n  <br/>\\n  <button type=\\\"button\\\" class=\\\"btn btn-light\\\"><a href=\\\"http://localhost:8001\\\">Back</a></button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { UserService } from '../_services';\nimport { User } from '../_models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n  \n  public users: User[];\n  public onlineUserId;\n  constructor(private _userService:UserService) { }\n\n  ngOnInit() {\n\n\n    this._userService.getAuthenticatedUser().subscribe((data => {\n      this.onlineUserId = data.id;\n    }))\n\n    this._userService.getAll().subscribe((data => {\n      this.users = data;\n      for(let user of this.users) {\n        if(user.id === this.onlineUserId) {\n          user.status = 'online';\n        }\n      }\n    }))\n\n\n    \n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8001'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}